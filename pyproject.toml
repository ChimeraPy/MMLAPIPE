[project]
name = "chimerapy-pipelines"
version = "0.0.1"
description = "Respository of sharable pipelines for ChimeraPy"
license = {file = "LICENSE.txt"}
readme = "README.md"
requires-python = ">3.6"

keywords = ["education", "multimodal", "data", "learning", "analytics"]

classifiers = [
    "Programming Language :: Python :: 3"
]

dependencies = [
    'numpy',
    'imutils',
    'opencv-python',
    'pillow',
    'dxcam; sys_platform == "win32"',
    'torch',
    'torchvision',
    'seaborn',
    'requests',
    'mss',
    'chimerapy-orchestrator',
    'chimerapy-engine'
]

[project.optional-dependencies]
test = [
    'pytest',
    'pytest-repeat',
    'pytest-lazy-fixture',
    'pytest-rerunfailures',
    'pre-commit',
]

mfsort = [
    'mf_sort[yolo] @ git+https://github.com/kbvatral/MF-SORT.git@master#egg=mf_sort',
    'ultralytics'
]

embodied = [
    'elp @ git+http://github.com/oele-isis-vanderbilt/EmbodiedLearningProject@main#egg=elp',
    'l2cs @ git+https://github.com/edavalosanaya/L2CS-Net.git@main#egg=l2cs'
]

[project.urls]
homepath = "https://github.com/oele-isis-vanderbilt/MMLAPIPE"
documentation = "https://oele-isis-vanderbilt.github.io/MMLAPIPE/"
repository = "https://github.com/oele-isis-vanderbilt/MMLAPIPE"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# https://setuptools.pypa.io/en/stable/userguide/datafiles.html
[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[tool.ruff]
ignore = ["E501"]
select = ["E", "W", "F", "C", "B", "I"]
ignore-init-module-imports = true
fixable = ["I001"]  # isort fix only
extend-exclude = ["run.py"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"mmlapipe/__version__.py" = ["E402"]




[project.entry-points."chimerapy.orchestrator.nodes_registry"]
get_nodes_registry = "chimerapy.pipelines:register_nodes_metadata"

# Reference:
# https://stackoverflow.com/questions/4673373/logging-within-pytest-tests
[tool.pytest.ini_options]

# Logging + CLI
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03d [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Timeout
faulthandler_timeout=300

# Ignore warnings
filterwarnings = "ignore::DeprecationWarning"
